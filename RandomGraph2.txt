simple Node
{
    gates:
        inout no[100];
         inout nl[];

}
simple Server
{
    gates:
        inout sl[];

}

network RandomGraph
{
    parameters:
        int size = default(100);
        
    submodules: 
        server: Server;
        Noeuds[size] : Node;

    connections allowunconnected:
        for i = 0 .. size - 1{ 
        server.sl++ <--> {} <--> Noeuds[i].nl++;
        }
        for i = 0 .. size - 1, for j= 0 .. 6{
        Noeuds[i].no[intuniform(0,size-1)] <--> {@reconnect;} <--> Noeuds[intuniform(0,size-1)].no[intuniform(0,size-1)];     
        }
        


}




simple Server
{
    gates:
        inout sl[];

}
simple Node
{
    gates:
        inout no[99];
        inout nl[];

}

network RandomGraph
{
    parameters:
        int size = default(99);
        
    submodules: 
        server: Server {
            @display("p=339,24");
        }
         Noeuds[size] : Node;

    connections allowunconnected:
        for i = 0 .. size - 1{ 
        server.sl++ <--> {} <--> Noeuds[i].nl++;
        }
        for i = 0 .. size - 1,for k = i + 1  .. size - 1{
        Noeuds[i].no++ <--> {} <--> Noeuds[k].no++;     
        }
           
}